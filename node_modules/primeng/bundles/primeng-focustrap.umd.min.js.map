{"version":3,"sources":["ng://primeng/focustrap/focustrap.ts"],"names":["FocusTrap","el","this","prototype","onkeydown","e","pFocusTrapDisabled","preventDefault","focusableElements","DomHandler","getFocusableElements","nativeElement","length","document","activeElement","focusedIndex","indexOf","shiftKey","focus","ElementRef","Directive","args","selector","Input","HostListener","type","FocusTrapModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"mbAWI,SAAAA,EAAmBC,GAAAC,KAAAD,GAAAA,EA+BvB,OA3BID,EAAAG,UAAAC,UAFA,SAEUC,GACN,IAAgC,IAA5BH,KAAKI,mBAA6B,CAClCD,EAAEE,iBACF,IAAIC,EAAoBC,EAAAA,WAAWC,qBAAqBR,KAAKD,GAAGU,eAChE,GAAIH,GAAqBA,EAAkBI,OAAS,EAChD,GAAKC,SAASC,cAGT,CACD,IAAIC,EAAeP,EAAkBQ,QAAQH,SAASC,eAElDT,EAAEY,UACmB,GAAjBF,GAAuC,IAAjBA,EACtBP,EAAkBA,EAAkBI,OAAS,GAAGM,QAEhDV,EAAkBO,EAAe,GAAGG,SAGnB,GAAjBH,GAAsBA,IAAkBP,EAAkBI,OAAS,EACnEJ,EAAkB,GAAGU,QAErBV,EAAkBO,EAAe,GAAGG,aAf5CV,EAAkB,GAAGU,mDAVdC,EAAAA,kCAP1BC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,4DALaH,EAAAA,0DAStBI,EAAAA,yBAIAC,EAAAA,aAAYH,KAAA,CAAC,cAAe,CAAC,YAAS,CAAAI,KACtCD,EAAAA,aAAYH,KAAA,CAAC,oBAAqB,CAAC,cA4BxCrB,kBAEA,SAAA0B,KAK+B,2BAL9BC,EAAAA,SAAQN,KAAA,CAAC,CACNO,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC9B,GACV+B,aAAc,CAAC/B,OAEY0B","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Directive({\n    selector: '[pFocusTrap]',\n})\nexport class FocusTrap {\n\n    @Input() pFocusTrapDisabled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    @HostListener('keydown.tab', ['$event'])\n    @HostListener('keydown.shift.tab', ['$event'])\n    onkeydown(e) {\n        if (this.pFocusTrapDisabled !== true) {\n            e.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (e.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [FocusTrap],\n    declarations: [FocusTrap]\n})\nexport class FocusTrapModule { }"]}