!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("primeng/api"),require("primeng/dom"),require("@angular/forms"),require("quill")):"function"==typeof define&&define.amd?define("primeng/editor",["exports","@angular/core","@angular/common","primeng/api","primeng/dom","@angular/forms","quill"],e):e(((t=t||self).primeng=t.primeng||{},t.primeng.editor={}),t.ng.core,t.ng.common,t.primeng.api,t.primeng.dom,t.ng.forms,t.Quill)}(this,(function(t,e,n,o,l,i,a){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var l in e=arguments[n])Object.prototype.hasOwnProperty.call(e,l)&&(t[l]=e[l]);return t}).apply(this,arguments)},s={provide:i.NG_VALUE_ACCESSOR,useExisting:e.forwardRef((function(){return u})),multi:!0},u=function(){function t(t){this.el=t,this.onTextChange=new e.EventEmitter,this.onSelectionChange=new e.EventEmitter,this.onInit=new e.EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return t.prototype.ngAfterViewInit=function(){var t=this,e=l.DomHandler.findSingle(this.el.nativeElement,"div.p-editor-content"),n={toolbar:l.DomHandler.findSingle(this.el.nativeElement,"div.p-editor-toolbar")},o=this.modules?r(r({},n),this.modules):n;this.quill=new a(e,{modules:o,placeholder:this.placeholder,readOnly:this.readonly,theme:"snow",formats:this.formats,bounds:this.bounds,debug:this.debug,scrollingContainer:this.scrollingContainer}),this.value&&this.quill.pasteHTML(this.value),this.quill.on("text-change",(function(n,o,l){if("user"===l){var i=e.children[0].innerHTML,a=t.quill.getText().trim();"<p><br></p>"===i&&(i=null),t.onTextChange.emit({htmlValue:i,textValue:a,delta:n,source:l}),t.onModelChange(i),t.onModelTouched()}})),this.quill.on("selection-change",(function(e,n,o){t.onSelectionChange.emit({range:e,oldRange:n,source:o})})),this.onInit.emit({editor:this.quill})},t.prototype.ngAfterContentInit=function(){var t=this;this.templates.forEach((function(e){switch(e.getType()){case"toolbar":t.toolbarTemplate=e.template}}))},t.prototype.writeValue=function(t){this.value=t,this.quill&&(t?this.quill.pasteHTML(t):this.quill.setText(""))},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.getQuill=function(){return this.quill},Object.defineProperty(t.prototype,"readonly",{get:function(){return this._readonly},set:function(t){this._readonly=t,this.quill&&(this._readonly?this.quill.disable():this.quill.enable())},enumerable:!1,configurable:!0}),t.ctorParameters=function(){return[{type:e.ElementRef}]},t.decorators=[{type:e.Component,args:[{selector:"p-editor",template:'\n        <div [ngClass]="\'p-editor-container\'" [class]="styleClass">\n            <div class="p-editor-toolbar" *ngIf="toolbar || toolbarTemplate">\n                <ng-content select="p-header"></ng-content>\n                <ng-container *ngTemplateOutlet="headerTemplate"></ng-container>\n            </div>\n            <div class="p-editor-toolbar" *ngIf="!toolbar && !toolbarTemplate">\n                <span class="ql-formats">\n                    <select class="ql-header">\n                      <option value="1">Heading</option>\n                      <option value="2">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class="ql-font">\n                      <option selected>Sans Serif</option>\n                      <option value="serif">Serif</option>\n                      <option value="monospace">Monospace</option>\n                    </select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-bold" aria-label="Bold" type="button"></button>\n                    <button class="ql-italic" aria-label="Italic" type="button"></button>\n                    <button class="ql-underline" aria-label="Underline" type="button"></button>\n                </span>\n                <span class="ql-formats">\n                    <select class="ql-color"></select>\n                    <select class="ql-background"></select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-list" value="ordered" aria-label="Ordered List" type="button"></button>\n                    <button class="ql-list" value="bullet" aria-label="Unordered List" type="button"></button>\n                    <select class="ql-align">\n                        <option selected></option>\n                        <option value="center"></option>\n                        <option value="right"></option>\n                        <option value="justify"></option>\n                    </select>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-link" aria-label="Insert Link" type="button"></button>\n                    <button class="ql-image" aria-label="Insert Image" type="button"></button>\n                    <button class="ql-code-block" aria-label="Insert Code Block" type="button"></button>\n                </span>\n                <span class="ql-formats">\n                    <button class="ql-clean" aria-label="Remove Styles" type="button"></button>\n                </span>\n            </div>\n            <div class="p-editor-content" [ngStyle]="style"></div>\n        </div>\n    ',providers:[s],changeDetection:e.ChangeDetectionStrategy.OnPush,encapsulation:e.ViewEncapsulation.None}]}],t.ctorParameters=function(){return[{type:e.ElementRef}]},t.propDecorators={onTextChange:[{type:e.Output}],onSelectionChange:[{type:e.Output}],toolbar:[{type:e.ContentChild,args:[o.Header]}],style:[{type:e.Input}],styleClass:[{type:e.Input}],placeholder:[{type:e.Input}],formats:[{type:e.Input}],modules:[{type:e.Input}],bounds:[{type:e.Input}],scrollingContainer:[{type:e.Input}],debug:[{type:e.Input}],onInit:[{type:e.Output}],templates:[{type:e.ContentChildren,args:[o.PrimeTemplate]}],readonly:[{type:e.Input}]},t}(),p=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule],exports:[u,o.SharedModule],declarations:[u]}]}],t}();t.EDITOR_VALUE_ACCESSOR=s,t.Editor=u,t.EditorModule=p,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-editor.umd.min.js.map