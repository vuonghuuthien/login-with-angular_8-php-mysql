{"version":3,"sources":["ng://primeng/steps/steps.ts"],"names":["Steps","this","activeIndex","readonly","activeIndexChange","EventEmitter","prototype","itemClick","event","item","i","disabled","preventDefault","emit","url","command","originalEvent","index","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Input","Output","StepsModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"ibAKA,SAAAA,IA4BaC,KAAAC,YAAsB,EAItBD,KAAAE,UAAqB,EAMpBF,KAAAG,kBAAuC,IAAIC,EAAAA,aAuBzD,OArBIL,EAAAM,UAAAC,UAAA,SAAUC,EAAcC,EAAgBC,GAChCT,KAAKE,UAAYM,EAAKE,SACtBH,EAAMI,kBAIVX,KAAKG,kBAAkBS,KAAKH,GAEvBD,EAAKK,KACNN,EAAMI,iBAGNH,EAAKM,SACLN,EAAKM,QAAQ,CACTC,cAAeR,EACfC,KAAMA,EACNQ,MAAOP,0BAxDtBQ,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,UACVC,SAAU,ulEAoBXC,gBAAiBC,EAAAA,wBAAwBC,OACxCC,cAAeC,EAAAA,kBAAkBC,2yBAKhCC,EAAAA,qBAEAA,EAAAA,wBAEAA,EAAAA,qBAEAA,EAAAA,0BAEAA,EAAAA,iCAEAC,EAAAA,UAuBL7B,kBAEA,SAAA8B,KAK2B,2BAL1BC,EAAAA,SAAQZ,KAAA,CAAC,CACNa,QAAS,CAACC,EAAAA,aAAaC,EAAAA,cACvBC,QAAS,CAACnC,EAAMkC,EAAAA,cAChBE,aAAc,CAACpC,OAEQ8B","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n    selector: 'p-steps',\n    template: `\n        <div [ngClass]=\"{'p-steps p-component':true,'p-readonly':readonly}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul role=\"tablist\">\n                <li *ngFor=\"let item of model; let i = index\" class=\"p-steps-item\" #menuitem [ngStyle]=\"item.style\" [class]=\"item.styleClass\" role=\"tab\" [attr.aria-selected]=\"i === activeIndex\" [attr.aria-expanded]=\"i === activeIndex\"\n                    [ngClass]=\"{'p-highlight p-steps-current':(i === activeIndex), 'p-disabled':(item.disabled || (readonly && (i !== activeIndex)))}\">\n                    <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" class=\"p-menuitem-link\" role=\"presentation\" (click)=\"itemClick($event, item, i)\" (keydown.enter)=\"itemClick($event, item, i)\" [attr.target]=\"item.target\" [attr.id]=\"item.id\" \n                        [attr.tabindex]=\"item.disabled||(i !== activeIndex && readonly) ? null : (item.tabindex ? item.tabindex : '0')\">\n                        <span class=\"p-steps-number\">{{i + 1}}</span>\n                        <span class=\"p-steps-title\">{{item.label}}</span>\n                    </a>\n                    <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" role=\"presentation\" [routerLinkActive]=\"'p-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\" class=\"p-menuitem-link\" \n                        (click)=\"itemClick($event, item, i)\" (keydown.enter)=\"itemClick($event, item, i)\" [attr.target]=\"item.target\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.disabled||(i !== activeIndex && readonly) ? null : (item.tabindex ? item.tabindex : '0')\"\n                        [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                        <span class=\"p-steps-number\">{{i + 1}}</span>\n                        <span class=\"p-steps-title\">{{item.label}}</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./steps.css']\n})\nexport class Steps {\n    \n    @Input() activeIndex: number = 0;\n    \n    @Input() model: MenuItem[];\n    \n    @Input() readonly: boolean =  true;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Output() activeIndexChange: EventEmitter<any> = new EventEmitter();\n    \n    itemClick(event: Event, item: MenuItem, i: number)Â {\n        if (this.readonly || item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        this.activeIndexChange.emit(i);\n                \n        if (!item.url) {\n            event.preventDefault();\n        }\n        \n        if (item.command) {            \n            item.command({\n                originalEvent: event,\n                item: item,\n                index: i\n            });\n        }\n    }\n    \n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [Steps,RouterModule],\n    declarations: [Steps]\n})\nexport class StepsModule { }"]}