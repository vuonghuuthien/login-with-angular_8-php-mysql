{"version":3,"sources":["ng://primeng/galleria/galleria.ts"],"names":["Galleria","element","cd","this","fullScreen","numVisible","showItemNavigators","showThumbnailNavigators","showItemNavigatorsOnHover","changeItemOnIndicatorHover","circular","autoPlay","transitionInterval","showThumbnails","thumbnailsPosition","verticalThumbnailViewPortHeight","showIndicators","showIndicatorsOnItem","indicatorsPosition","baseZIndex","activeIndexChange","EventEmitter","visibleChange","_visible","_activeIndex","Object","defineProperty","prototype","activeIndex","visible","ngAfterContentInit","_this","templates","forEach","item","getType","headerFacet","template","footerFacet","indicatorFacet","captionFacet","ngOnChanges","simpleChanges","currentValue","DomHandler","addClass","document","body","zIndex","String","zindex","removeClass","onMaskHide","emit","onActiveItemChange","index","ngOnDestroy","ElementRef","ChangeDetectorRef","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Input","ViewChild","static","Output","ContentChildren","PrimeTemplate","GalleriaContent","galleria","value","maskHide","activeItemChange","id","UniqueComponentId","slideShowActicve","slideShowActive","galleriaClass","thumbnailsPosClass","getPositionClass","indicatorPosClass","containerClass","startSlideShow","interval","setInterval","length","onActiveIndexChange","stopSlideShow","clearInterval","preClassName","position","pos","find","isVertical","GalleriaItemSlot","_item","type","context","$implicit","contentTemplate","GalleriaItem","activeItem","ngOnInit","next","nextItemIndex","prev","prevItemIndex","stopTheSlideShow","navForward","e","cancelable","preventDefault","navBackward","onIndicatorClick","onIndicatorMouseEnter","onIndicatorKeyDown","isNavForwardDisabled","isNavBackwardDisabled","isIndicatorItemActive","GalleriaThumbnails","contentHeight","startPos","thumbnailsStyle","sortedResponsiveOptions","totalShiftedItems","page","_numVisible","d_numVisible","_oldNumVisible","_oldactiveIndex","createStyle","calculatePosition","responsiveOptions","bindDocumentListeners","ngAfterContentChecked","itemsContainer","getMedianItemIndex","nativeElement","style","transform","transition","createElement","appendChild","innerHTML","containerId","__spread","sort","data1","data2","value1","breakpoint","value2","localeCompare","undefined","numeric","i","res","windowWidth","window","innerWidth","matchedResponsiveData","parseInt","getTabIndex","isItemActive","getTotalPageNumber","step","diff","onItemClick","selectedItemIndex","dir","changePageOnTouch","Math","floor","onTransitionEnd","onTouchEnd","touchobj","changedTouches","pageY","y","pageX","x","onTouchMove","onTouchStart","firstItemAciveIndex","lastItemActiveIndex","documentResizeListener","addEventListener","unbindDocumentListeners","removeEventListener","parentNode","removeChild","GalleriaModule","NgModule","imports","CommonModule","SharedModule","RippleModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,ChangeDetectionStrategy, ViewChild, ContentChildren, QueryList, TemplateRef, OnInit, OnChanges, AfterContentChecked, SimpleChanges, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { UniqueComponentId } from 'primeng/utils';\nimport { DomHandler } from 'primeng/dom';\nimport { RippleModule } from 'primeng/ripple';  \n\n@Component({\n    selector: 'p-galleria',\n    template: `\n        <div *ngIf=\"fullScreen;else windowed\">\n            <div *ngIf=\"visible\" #mask [ngClass]=\"{'p-galleria-mask p-component-overlay':true, 'p-galleria-visible': this.visible}\" [class]=\"maskClass\" [ngStyle]=\"{'zIndex':zIndex}\">\n                <p-galleriaContent [value]=\"value\" [activeIndex]=\"activeIndex\" (maskHide)=\"onMaskHide()\" (activeItemChange)=\"onActiveItemChange($event)\" [ngStyle]=\"containerStyle\"></p-galleriaContent>\n            </div>\n        </div>\n\n        <ng-template #windowed>\n            <p-galleriaContent [value]=\"value\" [activeIndex]=\"activeIndex\" (activeItemChange)=\"onActiveItemChange($event)\"></p-galleriaContent>\n        </ng-template>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./galleria.css']\n})\nexport class Galleria implements OnChanges, OnDestroy {\n\n    @Input() get activeIndex(): number {\n        return this._activeIndex;\n    };\n\n    set activeIndex(activeIndex) {\n        this._activeIndex = activeIndex;\n    }\n\n    @Input() fullScreen: boolean = false;\n\n    @Input() id: string;\n\n    @Input() value: any[];\n\n    @Input() numVisible: number = 3;\n\n    @Input() responsiveOptions: any[];\n\n    @Input() showItemNavigators: boolean = false;\n\n    @Input() showThumbnailNavigators: boolean = true;\n\n    @Input() showItemNavigatorsOnHover: boolean = false;\n\n    @Input() changeItemOnIndicatorHover: boolean = false;\n\n    @Input() circular: boolean = false;\n\n    @Input() autoPlay: boolean = false;\n\n    @Input() transitionInterval: number = 4000;\n\n    @Input() showThumbnails: boolean = true;\n\n    @Input() thumbnailsPosition: string = \"bottom\";\n\n    @Input() verticalThumbnailViewPortHeight: string = \"300px\";\n\n    @Input() showIndicators: boolean = false;\n\n    @Input() showIndicatorsOnItem: boolean = false;\n\n    @Input() indicatorsPosition: string = \"bottom\";\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() maskClass: string;\n\n    @Input() containerClass: string;\n\n    @Input() containerStyle: any;\n\n    @ViewChild('mask', {static: false}) mask: ElementRef;\n\n    @Input() get visible(): boolean {\n        return this._visible;\n    };\n\n    set visible(visible: boolean) {\n        this._visible = visible;\n    }\n\n    @Output() activeIndexChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange: EventEmitter<any> = new EventEmitter();\n    \n\t@ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n\n    _visible: boolean = false;\n\n    _activeIndex: number = 0;\n\n    headerFacet: any;\n\n    footerFacet: any;\n\n    indicatorFacet: any;\n\n    captionFacet: any;\n\n    zIndex: string;\n\n    constructor(public element: ElementRef, public cd: ChangeDetectorRef) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerFacet = item.template;\n                break;\n                case 'footer':\n                    this.footerFacet = item.template;\n                break;\n                case 'indicator':\n                    this.indicatorFacet = item.template;\n                break;\n                case 'caption':\n                    this.captionFacet = item.template;\n                break;\n            }\n        });\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (this.fullScreen && simpleChanges.visible) {\n            if (simpleChanges.visible.currentValue) {\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\n\n                this.zIndex = String(this.baseZIndex + ++DomHandler.zindex)\n            }\n            else {\n                DomHandler.removeClass(document.body, 'p-overflow-hidden');\n            }\n        }\n    }\n    \n    onMaskHide() {\n        this.visible = false;\n        this.visibleChange.emit(false);\n    }\n\n    onActiveItemChange(index) {\n        if (this.activeIndex !== index) {\n            this.activeIndex = index;\n            this.activeIndexChange.emit(index);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.fullScreen) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n    }\n}\n\n@Component({\n    selector: 'p-galleriaContent',\n    template: `\n        <div [attr.id]=\"id\" *ngIf=\"value && value.length > 0\" [ngClass]=\"{'p-galleria p-component': true, 'p-galleria-fullscreen': this.galleria.fullScreen, \n            'p-galleria-indicator-onitem': this.galleria.showIndicatorsOnItem, 'p-galleria-item-nav-onhover': this.galleria.showItemNavigatorsOnHover && !this.galleria.fullScreen}\"\n            [ngStyle]=\"!galleria.fullScreen ? galleria.containerStyle : {}\" [class]=\"galleriaClass()\">\n            <button *ngIf=\"galleria.fullScreen\" type=\"button\" class=\"p-galleria-close p-link\" (click)=\"maskHide.emit()\" pRipple>\n                <span class=\"p-galleria-close-icon pi pi-times\"></span>\n            </button>\n            <div *ngIf=\"galleria.templates && galleria.headerFacet\" class=\"p-galleria-header\">\n                <p-galleriaItemSlot type=\"header\" [templates]=\"galleria.templates\"></p-galleriaItemSlot>\n            </div>\n            <div class=\"p-galleria-content\">\n                <p-galleriaItem [value]=\"value\" [activeIndex]=\"activeIndex\" [circular]=\"galleria.circular\" [templates]=\"galleria.templates\" (onActiveIndexChange)=\"onActiveIndexChange($event)\" \n                    [showIndicators]=\"galleria.showIndicators\" [changeItemOnIndicatorHover]=\"galleria.changeItemOnIndicatorHover\" [indicatorFacet]=\"galleria.indicatorFacet\"\n                    [captionFacet]=\"galleria.captionFacet\" [showItemNavigators]=\"galleria.showItemNavigators\" [autoPlay]=\"galleria.autoPlay\" [slideShowActive]=\"slideShowActive\"\n                    (startSlideShow)=\"startSlideShow()\" (stopSlideShow)=\"stopSlideShow()\"></p-galleriaItem>\n\n                <p-galleriaThumbnails *ngIf=\"galleria.showThumbnails\" [containerId]=\"id\" [value]=\"value\" (onActiveIndexChange)=\"onActiveIndexChange($event)\" [activeIndex]=\"activeIndex\" [templates]=\"galleria.templates\"\n                    [numVisible]=\"galleria.numVisible\" [responsiveOptions]=\"galleria.responsiveOptions\" [circular]=\"galleria.circular\"\n                    [isVertical]=\"isVertical()\" [contentHeight]=\"galleria.verticalThumbnailViewPortHeight\" [showThumbnailNavigators]=\"galleria.showThumbnailNavigators\"\n                    [slideShowActive]=\"slideShowActive\" (stopSlideShow)=\"stopSlideShow()\"></p-galleriaThumbnails>\n            </div>\n            <div *ngIf=\"galleria.templates && galleria.footerFacet\" class=\"p-galleria-footer\">\n                <p-galleriaItemSlot type=\"footer\" [templates]=\"galleria.templates\"></p-galleriaItemSlot>\n            </div>\n        </div>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GalleriaContent {\n\n    @Input() get activeIndex(): number {\n        return this._activeIndex;\n    };\n\n    set activeIndex(activeIndex: number) {\n        this._activeIndex = activeIndex;\n    }\n\n    @Input() value: any[] = [];\n\n    @Output() maskHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() activeItemChange: EventEmitter<any> = new EventEmitter();\n\n    id: string = this.galleria.id || UniqueComponentId();\n\n    slideShowActicve: boolean = false;\n\n    _activeIndex: number = 0;\n\n    slideShowActive: boolean = true;\n\n    interval: any;\n\n    styleClass: string;\n\n    constructor(public galleria: Galleria, public cd: ChangeDetectorRef) { }\n\n    galleriaClass() {\n        const thumbnailsPosClass = this.galleria.showThumbnails && this.getPositionClass('p-galleria-thumbnails', this.galleria.thumbnailsPosition);\n        const indicatorPosClass = this.galleria.showIndicators && this.getPositionClass('p-galleria-indicators', this.galleria.indicatorsPosition);\n\n        return (this.galleria.containerClass ? this.galleria.containerClass + \" \" : '') + (thumbnailsPosClass ? thumbnailsPosClass + \" \" : '') + (indicatorPosClass ? indicatorPosClass + \" \" : '');\n    }\n\n    startSlideShow() {\n        this.interval = setInterval(() => {\n            let activeIndex = (this.galleria.circular && (this.value.length - 1) === this.activeIndex) ? 0 : (this.activeIndex + 1);\n            this.onActiveIndexChange(activeIndex);\n            this.activeIndex = activeIndex;\n        }, this.galleria.transitionInterval);\n\n        this.slideShowActive = true;\n    }\n\n    stopSlideShow() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n\n        this.slideShowActive = false;\n    }\n\n    getPositionClass(preClassName, position) {\n        const positions = ['top', 'left', 'bottom', 'right'];\n        const pos = positions.find(item => item === position);\n\n        return pos ? `${preClassName}-${pos}` : '';\n    }\n\n    isVertical() {\n        return this.galleria.thumbnailsPosition === 'left' || this.galleria.thumbnailsPosition === 'right';\n    }\n\n    onActiveIndexChange(index) {\n        if (this.activeIndex !== index) {\n            this.activeIndex = index;\n            this.activeItemChange.emit(this.activeIndex);\n        }\n    }\n}\n\n@Component({\n    selector: 'p-galleriaItemSlot',\n    template: `\n        <ng-container *ngIf=\"contentTemplate\">\n            <ng-container *ngTemplateOutlet=\"contentTemplate; context: context\"></ng-container>\n        </ng-container>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GalleriaItemSlot {\n    @Input() templates: QueryList<any>;\n\n    @Input() index: number;\n\n    @Input() get item(): any {\n        return this._item;\n    };\n\n    set item(item:any) {\n        this._item = item;\n        if (this.templates) {\n            this.templates.forEach((item) => {\n                if (item.getType() === this.type) {\n                    switch(this.type) {\n                        case 'item':\n                        case 'caption':\n                        case 'thumbnail':\n                            this.context = {$implicit: this.item};\n                            this.contentTemplate = item.template;\n                        break;\n                    }\n                }\n            });\n        }\n    }\n\n    @Input() type: string;\n\n    contentTemplate: TemplateRef<any>;\n\n    context:any;\n\n    _item:any;\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            if (item.getType() === this.type) {\n                switch(this.type) {\n                    case 'item':\n                    case 'caption':\n                    case 'thumbnail':\n                        this.context = {$implicit: this.item};\n                        this.contentTemplate = item.template;\n                    break;\n                    case 'indicator':\n                        this.context = {$implicit: this.index};\n                        this.contentTemplate = item.template;\n                    break;\n                    default:\n                        this.context = {};\n                        this.contentTemplate = item.template;\n                    break;\n                }\n            }\n        });\n    }\n}\n\n@Component({\n    selector: 'p-galleriaItem',\n    template: `\n        <div class=\"p-galleria-item-wrapper\">\n            <div class=\"p-galleria-item-container\">\n                <button *ngIf=\"showItemNavigators\" type=\"button\" [ngClass]=\"{'p-galleria-item-prev p-galleria-item-nav p-link': true, 'p-disabled': this.isNavBackwardDisabled()}\" (click)=\"navBackward($event)\" [disabled]=\"isNavBackwardDisabled()\" pRipple>\n                    <span class=\"p-galleria-item-prev-icon pi pi-chevron-left\"></span>\n                </button>\n                <p-galleriaItemSlot type=\"item\" [item]=\"activeItem\" [templates]=\"templates\" class=\"p-galleria-item\"></p-galleriaItemSlot>\n                <button *ngIf=\"showItemNavigators\" type=\"button\" [ngClass]=\"{'p-galleria-item-next p-galleria-item-nav p-link': true,'p-disabled': this.isNavForwardDisabled()}\" (click)=\"navForward($event)\"  [disabled]=\"isNavForwardDisabled()\" pRipple>\n                    <span class=\"p-galleria-item-next-icon pi pi-chevron-right\"></span>\n                </button>\n                <div class=\"p-galleria-caption\" *ngIf=\"captionFacet\">\n                    <p-galleriaItemSlot type=\"caption\" [item]=\"activeItem\" [templates]=\"templates\"></p-galleriaItemSlot>\n                </div>\n            </div>\n            <ul *ngIf=\"showIndicators\" class=\"p-galleria-indicators p-reset\">\n                <li *ngFor=\"let item of value; let index = index;\" tabindex=\"0\"\n                    (click)=\"onIndicatorClick(index)\" (mouseenter)=\"onIndicatorMouseEnter(index)\" (keydown.enter)=\"onIndicatorKeyDown(index)\"\n                    [ngClass]=\"{'p-galleria-indicator': true,'p-highlight': isIndicatorItemActive(index)}\">\n                    <button type=\"button\" tabIndex=\"-1\" class=\"p-link\" *ngIf=\"!indicatorFacet\">\n                    </button>\n                    <p-galleriaItemSlot type=\"indicator\" [index]=\"index\" [templates]=\"templates\"></p-galleriaItemSlot>\n                </li>\n            </ul>\n        </div>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GalleriaItem implements OnInit {\n\n    @Input() circular: boolean = false;\n\n    @Input() value: any[];\n\n    @Input() showItemNavigators: boolean = false;\n\n    @Input() showIndicators: boolean = true;\n\n    @Input() slideShowActive: boolean = true;\n\n    @Input() changeItemOnIndicatorHover: boolean = true;\n\n    @Input() autoPlay: boolean = false;\n\n    @Input() templates: QueryList<any>;\n\n    @Input() indicatorFacet: any;\n\n    @Input() captionFacet: any;\n\n    @Output() startSlideShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() stopSlideShow: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onActiveIndexChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() get activeIndex(): number {\n        return this._activeIndex;\n    };\n\n    set activeIndex(activeIndex) {\n        this._activeIndex = activeIndex;\n        this.activeItem = this.value[this._activeIndex];\n    }\n\n    _activeIndex: number = 0;\n\n    activeItem: any;\n\n    ngOnInit() {\n        if (this.autoPlay) {\n            this.startSlideShow.emit();\n        }\n    }\n\n    next() {\n        let nextItemIndex = this.activeIndex + 1;\n        let activeIndex = this.circular && this.value.length - 1 === this.activeIndex\n                    ? 0\n                    : nextItemIndex;\n        this.onActiveIndexChange.emit(activeIndex);\n    }\n\n    prev() {\n        let prevItemIndex = this.activeIndex !== 0 ? this.activeIndex - 1 : 0;\n        let activeIndex = this.circular && this.activeIndex === 0\n                ? this.value.length - 1\n                : prevItemIndex\n        this.onActiveIndexChange.emit(activeIndex);\n    }\n\n    stopTheSlideShow() {\n        if (this.slideShowActive && this.stopSlideShow) {\n            this.stopSlideShow.emit();\n        }\n    }\n\n    navForward(e) {\n        this.stopTheSlideShow();\n        this.next();\n\n        if (e && e.cancelable) {\n            e.preventDefault();\n        }\n    }\n\n    navBackward(e) {\n        this.stopTheSlideShow();\n        this.prev();\n\n        if (e && e.cancelable) {\n            e.preventDefault();\n        }\n    }\n\n    onIndicatorClick(index) {\n        this.stopTheSlideShow();\n        this.onActiveIndexChange.emit(index);\n    }\n\n    onIndicatorMouseEnter(index) {\n        if (this.changeItemOnIndicatorHover) {\n            this.stopTheSlideShow();\n            this.onActiveIndexChange.emit(index);\n        }\n    }\n\n    onIndicatorKeyDown(index) {\n        this.stopTheSlideShow();\n        this.onActiveIndexChange.emit(index);\n    }\n\n    isNavForwardDisabled() {\n        return !this.circular && this.activeIndex === (this.value.length - 1);\n    }\n\n    isNavBackwardDisabled() {\n        return !this.circular && this.activeIndex === 0;\n    }\n\n    isIndicatorItemActive(index) {\n        return this.activeIndex === index;\n    }\n}\n\n@Component({\n    selector: 'p-galleriaThumbnails',\n    template: `\n        <div class=\"p-galleria-thumbnail-wrapper\">\n            <div class=\"p-galleria-thumbnail-container\">\n                <button *ngIf=\"showThumbnailNavigators\" type=\"button\" [ngClass]=\"{'p-galleria-thumbnail-prev p-link': true, 'p-disabled': this.isNavBackwardDisabled()}\" (click)=\"navBackward($event)\" [disabled]=\"isNavBackwardDisabled()\" pRipple>\n                    <span [ngClass]=\"{'p-galleria-thumbnail-prev-icon pi': true, 'pi-chevron-left': !this.isVertical, 'pi-chevron-up': this.isVertical}\"></span>\n                </button>\n                <div class=\"p-galleria-thumbnail-items-container\" [ngStyle]=\"{'height': isVertical ? contentHeight : ''}\">\n                    <div #itemsContainer class=\"p-galleria-thumbnail-items\" (transitionend)=\"onTransitionEnd()\"\n                        (touchstart)=\"onTouchStart($event)\" (touchmove)=\"onTouchMove($event)\" (touchend)=\"onTouchEnd($event)\">\n                        <div *ngFor=\"let item of value; let index = index;\" [ngClass]=\"{'p-galleria-thumbnail-item': true, 'p-galleria-thumbnail-item-current': activeIndex === index, 'p-galleria-thumbnail-item-active': isItemActive(index),\n                            'p-galleria-thumbnail-item-start': firstItemAciveIndex() === index, 'p-galleria-thumbnail-item-end': lastItemActiveIndex() === index }\">\n                            <div class=\"p-galleria-thumbnail-item-content\" [attr.tabindex]=\"getTabIndex(index)\" (click)=\"onItemClick(index)\" (keydown.enter)=\"onItemClick(index)\">\n                                <p-galleriaItemSlot type=\"thumbnail\" [item]=\"item\" [templates]=\"templates\"></p-galleriaItemSlot>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button *ngIf=\"showThumbnailNavigators\" type=\"button\" [ngClass]=\"{'p-galleria-thumbnail-next p-link': true, 'p-disabled': this.isNavForwardDisabled()}\" (click)=\"navForward($event)\" [disabled]=\"isNavForwardDisabled()\" pRipple>\n                    <span [ngClass]=\"{'p-galleria-thumbnail-next-icon pi': true, 'pi-chevron-right': !this.isVertical, 'pi-chevron-down': this.isVertical}\"></span>\n                </button>\n            </div>\n        </div>\n    `,\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GalleriaThumbnails implements OnInit, AfterContentChecked, OnDestroy {\n\n    @Input() containerId: string;\n\n    @Input() value: any[];\n\n    @Input() isVertical: boolean = false;\n\n    @Input() slideShowActive: boolean = false;\n\n    @Input() circular: boolean = false;\n\n    @Input() responsiveOptions: any[];\n\n    @Input() contentHeight: string = \"300px\";\n\n    @Input() showThumbnailNavigators = true;\n\n    @Input() templates: QueryList<any>;\n\n    @Output() onActiveIndexChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() stopSlideShow: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('itemsContainer') itemsContainer: ElementRef;\n\n    @Input() get numVisible(): number {\n        return this._numVisible;\n    };\n\n    set numVisible(numVisible) {\n        this._numVisible = numVisible;\n        this._oldNumVisible = this.d_numVisible;\n        this.d_numVisible = numVisible;\n    }\n\n    @Input() get activeIndex(): number {\n        return this._activeIndex;\n    };\n\n    set activeIndex(activeIndex) {\n        this._oldactiveIndex = this._activeIndex;\n        this._activeIndex = activeIndex;\n    }\n    \n    index: number;\n\n    startPos = null;\n    \n    thumbnailsStyle = null;\n\n    sortedResponsiveOptions = null;\n\n    totalShiftedItems: number = 0;\n\n    page: number = 0;\n\n    documentResizeListener: any;\n\n    _numVisible:number = 0;\n\n    d_numVisible: number = 0;\n\n    _oldNumVisible: number = 0;\n\n    _activeIndex: number = 0;\n    \n    _oldactiveIndex: number = 0;\n\n    ngOnInit() {\n        this.createStyle();\n\t\tthis.calculatePosition();\n\n\t\tif (this.responsiveOptions) {\n\t\t\tthis.bindDocumentListeners();\n\t\t}\n    }\n\n    ngAfterContentChecked() {\n        let totalShiftedItems = this.totalShiftedItems;\n\n        if ((this._oldNumVisible !== this.d_numVisible || this._oldactiveIndex !== this._activeIndex) && this.itemsContainer) {\n            if (this._activeIndex <= this.getMedianItemIndex()) {\n                totalShiftedItems = 0;\n            }\n            else if (this.value.length - this.d_numVisible + this.getMedianItemIndex() < this._activeIndex) {\n                totalShiftedItems = this.d_numVisible - this.value.length;\n            }\n            else if (this.value.length - this.d_numVisible < this._activeIndex && this.d_numVisible % 2 === 0) {\n                totalShiftedItems = (this._activeIndex * -1) + this.getMedianItemIndex() + 1;\n            }\n            else {\n                totalShiftedItems = (this._activeIndex * -1) + this.getMedianItemIndex();\n            }\n\n            if (totalShiftedItems !== this.totalShiftedItems) {\n                this.totalShiftedItems = totalShiftedItems;\n            }\n\n            if (this.itemsContainer && this.itemsContainer.nativeElement) {\n                this.itemsContainer.nativeElement.style.transform = this.isVertical ? `translate3d(0, ${totalShiftedItems * (100/ this.d_numVisible)}%, 0)` : `translate3d(${totalShiftedItems * (100/ this.d_numVisible)}%, 0, 0)`;\n            }\n\n            if (this._oldactiveIndex !== this._activeIndex) {\n                DomHandler.removeClass(this.itemsContainer.nativeElement, 'p-items-hidden');\n                this.itemsContainer.nativeElement.style.transition = 'transform 500ms ease 0s';\n            }\n\n            this._oldactiveIndex = this._activeIndex;\n            this._oldNumVisible = this.d_numVisible;\n        }\n    }\n\n    createStyle() {\n        if (!this.thumbnailsStyle) {\n            this.thumbnailsStyle = document.createElement('style');\n            this.thumbnailsStyle.type = 'text/css';\n            document.body.appendChild(this.thumbnailsStyle);\n        }\n\n        let innerHTML = `\n            #${this.containerId} .p-galleria-thumbnail-item {\n                flex: 1 0 ${ (100/ this.d_numVisible) }%\n            }\n        `;\n\n        if (this.responsiveOptions) {\n            this.sortedResponsiveOptions = [...this.responsiveOptions];\n            this.sortedResponsiveOptions.sort((data1, data2) => {\n                const value1 = data1.breakpoint;\n                const value2 = data2.breakpoint;\n                let result = null;\n\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\n                else\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                return -1 * result;\n            });\n\n            for (let i = 0; i < this.sortedResponsiveOptions.length; i++) {\n                let res = this.sortedResponsiveOptions[i];\n\n                innerHTML += `\n                    @media screen and (max-width: ${res.breakpoint}) {\n                        #${this.containerId} .p-galleria-thumbnail-item {\n                            flex: 1 0 ${ (100/ res.numVisible) }%\n                        }\n                    }\n                `\n            }\n        }\n\n        this.thumbnailsStyle.innerHTML = innerHTML;\n    }\n\n    calculatePosition() {\n        if (this.itemsContainer && this.sortedResponsiveOptions) {\n            let windowWidth = window.innerWidth;\n            let matchedResponsiveData = {\n                numVisible: this._numVisible\n            };\n\n            for (let i = 0; i < this.sortedResponsiveOptions.length; i++) {\n                let res = this.sortedResponsiveOptions[i];\n\n                if (parseInt(res.breakpoint, 10) >= windowWidth) {\n                    matchedResponsiveData = res;\n                }\n            }\n\n            if (this.d_numVisible !== matchedResponsiveData.numVisible) {\n                this.d_numVisible = matchedResponsiveData.numVisible;\n            }\n        }\n    }\n\n    getTabIndex(index) {\n        return this.isItemActive(index) ? 0 : null;\n    }\n\n    navForward(e) {\n        this.stopTheSlideShow();\n\n        let nextItemIndex = this._activeIndex + 1;\n        if (nextItemIndex + this.totalShiftedItems > this.getMedianItemIndex() && ((-1 * this.totalShiftedItems) < this.getTotalPageNumber() - 1 || this.circular)) {\n            this.step(-1);\n        }\n\n        let activeIndex = this.circular && (this.value.length - 1) === this._activeIndex ? 0 : nextItemIndex;\n        this.onActiveIndexChange.emit(activeIndex);\n\n        if (e.cancelable) {\n            e.preventDefault();\n        }\n    }\n\n    navBackward(e) {\n        this.stopTheSlideShow();\n\n        let prevItemIndex = this._activeIndex !== 0 ? this._activeIndex - 1 : 0;\n        let diff = prevItemIndex + this.totalShiftedItems;\n        if ((this.d_numVisible - diff - 1) > this.getMedianItemIndex() && ((-1 * this.totalShiftedItems) !== 0 || this.circular)) {\n            this.step(1);\n        }\n\n        let activeIndex = this.circular && this._activeIndex === 0 ? this.value.length - 1 : prevItemIndex;\n        this.onActiveIndexChange.emit(activeIndex);\n\n        if (e.cancelable) {\n            e.preventDefault();\n        }\n    }\n\n    onItemClick(index) {\n        this.stopTheSlideShow();\n\n        let selectedItemIndex = index;\n        if (selectedItemIndex !== this._activeIndex) {\n            const diff = selectedItemIndex + this.totalShiftedItems;\n            let dir = 0;\n            if (selectedItemIndex < this._activeIndex) {\n                dir = (this.d_numVisible - diff - 1) - this.getMedianItemIndex();\n                if (dir > 0 && (-1 * this.totalShiftedItems) !== 0) {\n                    this.step(dir);\n                }\n            }\n            else {\n                dir = this.getMedianItemIndex() - diff;\n                if (dir < 0 && (-1 * this.totalShiftedItems) < this.getTotalPageNumber() - 1) {\n                    this.step(dir);\n                }\n            }\n\n            this.activeIndex = selectedItemIndex;\n            this.onActiveIndexChange.emit(this.activeIndex);\n        }\n    }\n\n    step(dir) {\n        let totalShiftedItems = this.totalShiftedItems + dir;\n\n        if (dir < 0 && (-1 * totalShiftedItems) + this.d_numVisible > (this.value.length - 1)) {\n            totalShiftedItems = this.d_numVisible - this.value.length;\n        }\n        else if (dir > 0 && totalShiftedItems > 0) {\n            totalShiftedItems = 0;\n        }\n\n        if (this.circular) {\n            if (dir < 0 && this.value.length - 1 === this._activeIndex) {\n                totalShiftedItems = 0;\n            }\n            else if (dir > 0 && this._activeIndex === 0) {\n                totalShiftedItems = this.d_numVisible - this.value.length;\n            }\n        }\n\n        if (this.itemsContainer) {\n            DomHandler.removeClass(this.itemsContainer.nativeElement, 'p-items-hidden');\n            this.itemsContainer.nativeElement.style.transform = this.isVertical ? `translate3d(0, ${totalShiftedItems * (100/ this.d_numVisible)}%, 0)` : `translate3d(${totalShiftedItems * (100/ this.d_numVisible)}%, 0, 0)`;\n            this.itemsContainer.nativeElement.style.transition = 'transform 500ms ease 0s';\n        }\n\n        this.totalShiftedItems = totalShiftedItems;\n    }\n\n    stopTheSlideShow() {\n        if (this.slideShowActive && this.stopSlideShow) {\n            this.stopSlideShow.emit();\n        }\n    }\n\n    changePageOnTouch(e, diff) {\n        if (diff < 0) {           // left\n            this.navForward(e);\n        }\n        else {                    // right\n            this.navBackward(e);\n        }\n    }\n    \n    getTotalPageNumber() {\n        return this.value.length > this.d_numVisible ? (this.value.length - this.d_numVisible) + 1 : 0;\n    }\n\n    getMedianItemIndex() {\n        let index = Math.floor(this.d_numVisible / 2);\n\n        return (this.d_numVisible % 2) ? index : index - 1;\n    }\n\n    onTransitionEnd() {\n        if (this.itemsContainer && this.itemsContainer.nativeElement) {\n            DomHandler.addClass(this.itemsContainer.nativeElement, 'p-items-hidden');\n            this.itemsContainer.nativeElement.style.transition = '';\n        }\n    }\n\n    onTouchEnd(e) {\n        let touchobj = e.changedTouches[0];\n\n        if (this.isVertical) {\n            this.changePageOnTouch(e, (touchobj.pageY - this.startPos.y));\n        }\n        else {\n            this.changePageOnTouch(e, (touchobj.pageX - this.startPos.x));\n        }\n    }\n\n    onTouchMove(e) {\n        if (e.cancelable) {\n            e.preventDefault();\n        }\n    }\n\n    onTouchStart(e) {\n        let touchobj = e.changedTouches[0];\n\n        this.startPos = {\n            x: touchobj.pageX,\n            y: touchobj.pageY\n        };\n    }\n\n    isNavBackwardDisabled() {\n        return (!this.circular && this._activeIndex === 0) || (this.value.length <= this.d_numVisible);\n    }\n\n    isNavForwardDisabled() {\n        return (!this.circular && this._activeIndex === (this.value.length - 1)) || (this.value.length <= this.d_numVisible);\n    }\n\n    firstItemAciveIndex() {\n        return this.totalShiftedItems * -1;\n    }\n\n    lastItemActiveIndex() {\n        return this.firstItemAciveIndex() + this.d_numVisible - 1;\n    }\n\n    isItemActive(index) {\n        return this.firstItemAciveIndex() <= index && this.lastItemActiveIndex() >= index;\n    }\n\n    bindDocumentListeners() {\n        if (!this.documentResizeListener) {\n            this.documentResizeListener = () => {\n                this.calculatePosition();\n            };\n\n            window.addEventListener('resize', this.documentResizeListener);\n        }\n    }\n\n    unbindDocumentListeners() {\n        if(this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.responsiveOptions) {\n\t\t\tthis.unbindDocumentListeners();\n        }\n\n        if (this.thumbnailsStyle) {\n            this.thumbnailsStyle.parentNode.removeChild(this.thumbnailsStyle);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, SharedModule, RippleModule],\n    exports: [CommonModule, Galleria, GalleriaContent, GalleriaItemSlot, GalleriaItem, GalleriaThumbnails, SharedModule],\n    declarations: [Galleria, GalleriaContent, GalleriaItemSlot, GalleriaItem, GalleriaThumbnails]\n})\nexport class GalleriaModule { }"]}