{"version":3,"sources":["ng://primeng/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","value","validateHSB","h","Math","floor","max","min","pageY","s","b","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","colorDragging","pickColor","rect","left","scrollLeft","saturation","pageX","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","markForCheck","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","onOverlayHide","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","preventDefault","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","listen","unbindDocumentClickListener","documentMousemoveListener","unbindDocumentMousemoveListener","documentMouseupListener","unbindDocumentMouseupListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","Component","args","selector","template","animations","trigger","transition","opacity","transform","animate","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","Input","Output","ViewChild","ColorPickerModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-colorpicker p-component':true,'p-colorpicker-overlay':!inline,'p-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"p-colorpicker-preview p-inputtext\" readonly=\"readonly\" [ngClass]=\"{'p-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel':!inline, 'p-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <div class=\"p-colorpicker-content\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"p-colorpicker-color\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./colorpicker.css']\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() inline: boolean;\n    \n    @Input() format: string = 'hex';\n    \n    @Input() appendTo: string;\n    \n    @Input() disabled: boolean;\n    \n    @Input() tabindex: string;\n    \n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('input') inputViewChild: ElementRef;\n    \n    value: any;\n    \n    inputBgColor: string;\n    \n    shown: boolean;\n    \n    overlayVisible: boolean;\n    \n    defaultColor: string = 'ff0000';\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    documentClickListener: Function;\n    \n    documentMousemoveListener: Function;\n    \n    documentMouseupListener: Function;\n    \n    documentHueMoveListener: Function;\n                \n    selfClick: boolean;\n    \n    colorDragging: boolean;\n    \n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n    \n    colorHandleViewChild: ElementRef;\n    \n    hueViewChild: ElementRef;\n    \n    hueHandleViewChild: ElementRef;\n                \n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n        \n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        \n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n    \n    pickHue(event: MouseEvent) {\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n        \n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n    \n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        \n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n    \n    pickColor(event: MouseEvent) {\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, (event.pageX - left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n        \n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n    \n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n            \n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n            \n            case 'hsb':\n                val = this.value;\n            break;\n        }\n        \n        return val;\n    }\n    \n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n                \n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n                \n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n        \n        this.updateColorSelector();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n    \n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n        \n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n    \n    onInputFocus() {\n        this.onModelTouched();\n    }\n    \n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    \n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n    \n    hide() {\n        this.overlayVisible = false;\n    }\n         \n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n    \n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n                        \n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n        \n    onPanelClick() {\n        this.selfClick = true;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n                \n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }    \n    }\n    \n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    \n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            this.documentMousemoveListener = this.renderer.listen('document', 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n                \n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n    \n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n    \n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            this.documentMouseupListener = this.renderer.listen('document', 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n    \n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n    \n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n    \n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n    \n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n    \n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n    \n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n    \n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        } \n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n    \n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n        \n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }        \n\n        return hex.join('');\n    }\n    \n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n    \n    ngOnDestroy() {\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}